@model MvcAutomation.Models.NewTestViewModel

@{
    ViewBag.Title = "Создание задания";
}

<div id="content">
    <div class="right">
        @if (Session["CreateMessage"] != null)
        {
            <h2>@Session["CreateMessage"]</h2>
            Session["CreateMessage"] = null;
        }
        @using (Html.BeginForm("CreateTest", "Home", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            @Html.HiddenFor(model => model.Values)
            @Html.HiddenFor(model => model.States)
            <div class="editor-field">
                <label>Имя задания</label>
                <br />
                @Html.TextBoxFor(model => model.TestName, new { style = "width: 100px" })
            </div>
            <div class="editor-field">
                <label>Регулярное выражение</label>
                <br />
                @Html.TextBoxFor(model => model.Regex, new { style = "width: 100px" })
            </div>
            <br />
            <div class="editor-field">
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                @for (int j = 0; j != Model.Values; j++)
                {
                    @Html.TextBoxFor(val => val.ValuesArray[j], new { style = "width: 20px" })
                }
            </div>
            <br />
            for (int i = 0; i != Model.States; i++)
            {
                <div class="editor-field">
                    <label>
                        q
                        @i
                    </label>
                    @for (int j = 0; j != Model.Values; j++)
                    {
                        @Html.TextBoxFor(val => val.GraphArray[i * Model.Values + j], new { style = "width: 20px" })
                    }
                </div>
            }
            <br />
            @Html.Label("Конечные состояния")
            <br />
            for (int j = 0; j != Model.States; j++)
            {
                <label>
                    q
                    @j
                </label>
            }
            <br />
            for (int j = 0; j != Model.States; j++)
            {
                @Html.TextBoxFor(val => val.FinalStates[j], new { style = "width: 20px" })
            }

            <br />
            <br />
            <input type="submit" name="TestWork" id="AddValue" value="Добавить значение" />
            <input type="submit" name="TestWork" id="AddState" value="Добавить состояние" />
            <div class="editor-field">
                <label>Описание</label>
                <br />
                @Html.TextAreaFor(model => model.Description, new { cols = 70, rows = 23 })
            </div>

            <input type="submit" name="TestWork" id="Send" value="Отправить" />
        }
    </div>
</div>
